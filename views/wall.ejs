<!DOCTYPE html>
<html>
<head>
	<title>White Board</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet"  href="css/bootstrap.min.css">
	<link rel="stylesheet"	href="css/styles.css">
	<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body>
	<header>
		<nav id="header-nav" class="navbar navbar-default">
			<div class="container" id="logo-container">
				<div class="navbar-header">
					<a href="/" class="pull-left visible-md visible-lg visible-sm">
						<img id="logo-img" width = "120px" src='../images/minilogo.png'>
				</div>
				<div class="topnav">

					<a class="material-icons" id="notification-icon">message</a>
					<a class="material-icons" id="notification-icon">notifications</a>
					<a class="material-icons" id="notification-icon">people</a>
					<a href= "/home" class="material-icons" id="home-icon">home</a>
					<input type="text" placeholder="Search..">
				</div>

			</div>
			        
		</nav>
	</header>


	<div class="container">
  		<div class="row">
    		<div class="col-md-3 col-sm-3 col-xs-3"  id="fade-item">
    			<div class="col-md-12" id="body-side">
    				<h4> Welcome <%=username%> </h4>
    			</div>
      		
    		</div>
	    	<div class="col-md-6 col-sm-9 col-xs-6" >
	      	<div class="col-md-12 col-sm-12 col-sx-12" id="body-middle">
    				<a class="material-icons" id="post-icon">edit</a>
    				<h4 id="write-a-post">Write a post...</h4>
    		
    			</div>
    			<div class="col-md-12 col-sm-12 col-sx-12" id="body-middle">
    				Containers provide a means to center and horizontally pad your site’s contents. Use .container for a responsive pixel width or .container-fluid for width: 100% across all viewport and device sizes.
Rows are wrappers for columns. Each column has horizontal padding (called a gutter) for controlling the space between them. This padding is then counteracted on the rows with negative margins. This way, all the content in your columns is visually aligned down the left side.
In a grid layout, content must be placed within columns and only columns may be immediate children of rows.
Thanks to flexbox, grid columns without a specified width will automaticall
    			</div>

    			<div class="col-md-12 col-sm-12 col-sx-12" id="body-middle">
    				Containers provide a means to center and horizontally pad your site’s contents. Use .container for a responsive pixel width or .
In a grid layout, content must be placed within columns and only columns may be immediate children of rows.
Thanks to flexbox, grid columns without a specified width will automaticall
    			</div>
	    	</div>
		   <div class="col-md-3 col-sm-3 col-xs-3" >
		     <div class="col-md-12 col-sm-12 col-sx-12" id="body-side">
    				One of three columns
    			</div>
		   </div>
  		</div>
	</div>


	<script src="js/bootstrap.min.js"></script>
	<script src="js/jquery-3.5.1.min"></script>
	<script type="js.script.js"></script>
	

</body>
</html>